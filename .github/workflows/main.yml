# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: umigamedb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testuser_pass
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/umigamedb?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testuser_pass
      USERNAME: ${{ secrets.DEPLOY_USERNAME }}
      HOSTNAME: ${{ secrets.DEPLOY_HOSTNAME }}
      PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
      
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Deploy jar
      run: |
        mkdir -p ~/.ssh/
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        scp -o 'StrictHostKeyChecking=no' -i ~/.ssh/id_rsa ./target/situation-puzzle-0.0.1-SNAPSHOT.jar $USERNAME@$HOSTNAME:/home/$USERNAME/app.jar
        ssh -o 'StrictHostKeyChecking=no' -i ~/.ssh/id_rsa -t $USERNAME@$HOSTNAME "nohup /usr/bin/bash /home/$USERNAME/deploy.sh & exit"
